plugins {
    id "com.avast.gradle.docker-compose" version "0.6.6"
}

group = 'com.codebrig.phenomenon.kythe'
version = '0.1'

apply plugin: 'groovy'

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven {
        url 'https://repo.grakn.ai/repository/maven/'
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.eclipse.jgit', name: 'org.eclipse.jgit', version: '5.0.1.201806211838-r'

    compile 'org.codehaus.groovy:groovy-all:2.4.15'
    compile 'com.github.codebrig:arthur:16a2ba1679'
    compile 'com.github.codebrig:phenomena:1f4f1b1d97'
    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
    implementation 'org.zeroturnaround:zt-exec:1.10'
    implementation 'com.h2database:h2:1.4.197'
    implementation group: 'io.grakn.client', name: 'grakn-client', version: "1.6.2"
    implementation group: 'io.graql', name: 'graql-lang', version: "1.0.5"
    implementation 'org.bblfsh:bblfsh-client:1.11.0'
    compile files("opt/kythe-v0.0.28/indexers/java_indexer.jar")
}

test {
    dependsOn "composeUp"
    finalizedBy "composeDown"

    testLogging {
        events "passed", "skipped", "failed"
        setExceptionFormat("full")

        outputs.upToDateWhen { false }
        showStandardStreams = true
    }
}

dockerCompose {
    useComposeFiles = ['./docker-compose.yml']
    dockerComposeWorkingDirectory = './docker/'
    captureContainersOutput = true
}